{"metadata":{"roleHeading":"Operator","extendedModule":"Swift","role":"symbol","symbolKind":"op","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10LLFSMModel7MachineV","modules":[{"name":"LLFSMModel"}],"title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Equatable.!=(_:_:)"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/LLFSMModel\/documentation\/LLFSMModel","doc:\/\/LLFSMModel\/documentation\/LLFSMModel\/Machine","doc:\/\/LLFSMModel\/documentation\/LLFSMModel\/Machine\/Equatable-Implementations"]]},"variants":[{"paths":["\/documentation\/llfsmmodel\/machine\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/LLFSMModel\/documentation\/LLFSMModel\/Machine\/!=(_:_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://LLFSMModel/documentation/LLFSMModel/Machine/!=(_:_:)":{"abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/LLFSMModel\/documentation\/LLFSMModel\/Machine\/!=(_:_:)","kind":"symbol","url":"\/documentation\/llfsmmodel\/machine\/!=(_:_:)","title":"!=(_:_:)","type":"topic"},"doc://LLFSMModel/documentation/LLFSMModel/Machine/Equatable-Implementations":{"kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/LLFSMModel\/documentation\/LLFSMModel\/Machine\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/llfsmmodel\/machine\/equatable-implementations","role":"collectionGroup"},"doc://LLFSMModel/documentation/LLFSMModel":{"identifier":"doc:\/\/LLFSMModel\/documentation\/LLFSMModel","title":"LLFSMModel","abstract":[],"type":"topic","url":"\/documentation\/llfsmmodel","kind":"symbol","role":"collection"},"doc://LLFSMModel/documentation/LLFSMModel/Machine":{"url":"\/documentation\/llfsmmodel\/machine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Machine"}],"identifier":"doc:\/\/LLFSMModel\/documentation\/LLFSMModel\/Machine","kind":"symbol","title":"Machine","navigatorTitle":[{"kind":"identifier","text":"Machine"}],"abstract":[{"type":"text","text":"A machine is an LLFSM definition. A basic machine contains a name, states, and variables of differing"},{"type":"text","text":" "},{"type":"text","text":"scope. An intial state is also required specifying the state the machine is in at invocation. The machine"},{"type":"text","text":" "},{"type":"text","text":"can also be "},{"inlineContent":[{"text":"parameterized","type":"text"}],"type":"emphasis"},{"type":"text","text":" by specifying a list of parameters and returnables. A machine may also be"},{"type":"text","text":" "},{"inlineContent":[{"text":"suspensible","type":"text"}],"type":"emphasis"},{"type":"text","text":" by specifying a suspended state."}],"role":"symbol","type":"topic"}}}